/**
 * @fileOverview 页面入口
 * @author Max
 **/

import React from 'react';
import {Provider} from 'react-redux';
import {routes} from '../../routes';
import Router from 'react-router';
import DevTools from './devtools';
import {compose, createStore, applyMiddleware} from 'redux';
import APP from '../../a-reducer/app';
import promiseMiddleware from 'redux-promise';
import ValidatorMiddleware from 'redux-validator';
import Immutable from 'immutable';
import createBrowserHistory from 'history/lib/createBrowserHistory';

import AJAX from '../utils/ajax';
import Storage from '../utils/storage';
window._ajax= new AJAX({
    hostname: __API_SERVER_HOSTNAME__,
    port: __API_SERVER_PORT__,
    stubHostname: __STUB_SERVER_HOSTNAME__,
    stubPort: __STUB_SERVER_PORT__
});
window._storage = Storage;

let finalCreateStore;
if(__WEBPACK_DEV__) {
    const devTools = require('redux-devtools').devTools;
    const persistState = require('redux-devtools').persistState;
    const createLogger = require('redux-logger');
    finalCreateStore = compose(
       applyMiddleware(ValidatorMiddleware(), promiseMiddleware, createLogger({
           transformer: (state) => {
               var newState = {};
               for (var i of Object.keys(state)) {
                   if (Immutable.Iterable.isIterable(state[i])) {
                       newState[i] = state[i].toJS();
                   } else {
                       newState[i] = state[i];
                   }
               }
               return newState;
           }
       })),
       devTools(),
       persistState(window.location.href.match(/[?&]debug_session=([^&]+)\b/))
   )(createStore);
} else {
    finalCreateStore = compose(
       applyMiddleware(ValidatorMiddleware(), promiseMiddleware)
   )(createStore);
}

let initialState = JSON.parse(__INITIAL_STATE__);
for(let i in initialState) {
    initialState[i] = Immutable.fromJS(initialState[i]);
}

const store = finalCreateStore(APP, initialState);

if(__MOBILE__) {
    React.initializeTouchEvents(true);
}

React.render((
    <div>
        <Provider store={store}>
            {() => <Router history={createBrowserHistory()} store={store}>{routes}</Router>}
        </Provider>
        <DevTools store={store} />
    </div>
), document.getElementById('root'));
